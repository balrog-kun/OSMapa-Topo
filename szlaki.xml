<!-- mapnik 3.0 or a patched mapnik 2.x are required for expressions in
"stroke" and "offset".  With an unpatched mapnik 2, every rule will
need to be repeated #colours * #max-parallel-routes times.  #colours is
at least 5. -->
<Style name="szlaki">
  <Rule>
    &maxscale_zoom14;
    <Filter>[route] = 'yes' or [route] = 'hiking' or [route] = 'foot'</Filter>
    <LineSymbolizer
      stroke="[colour]"
      stroke-width="3"
      stroke-dasharray="7,4"
      offset="[offset3]"
      stroke-linejoin="round"/>
  </Rule>
  <Rule>
    &maxscale_szlaki;
    &minscale_zoom13;
    <Filter>[route] = 'yes' or [route] = 'hiking' or [route] = 'foot'</Filter>
    <LineSymbolizer
      stroke="[colour]"
      stroke-width="2"
      stroke-dasharray="5,2"
      offset="[offset2]"
      stroke-linejoin="round"/>
  </Rule>
  <Rule>
    &maxscale_zoom14;
    <Filter>[route] = 'bicycle' or [route] = 'mtb'</Filter>
    <LineSymbolizer
      stroke="[colour]"
      stroke-width="3"
      stroke-dasharray="3,3"
      offset="[offset3]"
      stroke-linejoin="round"/>
  </Rule>
  <Rule>
    &maxscale_szlaki;
    &minscale_zoom13;
    <Filter>[route] = 'bicycle' or [route] = 'mtb'</Filter>
    <LineSymbolizer
      stroke="[colour]"
      stroke-width="2"
      stroke-dasharray="2,2"
      offset="[offset2]"
      stroke-linejoin="round"/>
  </Rule>
  <Rule>
    &maxscale_zoom14;
    <Filter>[route] = 'ski' or [route] = 'piste' or
      [route] = 'horse' or [route] = 'inline_skating'</Filter>
    <LineSymbolizer
      stroke="[colour]"
      stroke-width="3"
      stroke-dasharray="1,1"
      offset="[offset3]"
      stroke-linejoin="round"/>
  </Rule>
  <Rule>
    &maxscale_szlaki;
    &minscale_zoom13;
    <Filter>[route] = 'ski' or [route] = 'piste' or
      [route] = 'horse' or [route] = 'inline_skating'</Filter>
    <LineSymbolizer
      stroke="[colour]"
      stroke-width="2"
      stroke-dasharray="1,1"
      offset="[offset2]"
      stroke-linejoin="round"/>
  </Rule>
</Style>

<Style name="szlaki-names">
  <Rule>
    &maxscale_szlaki;
    <TextSymbolizer face-name="DejaVu Sans Book" size="8" fill="#000"
      halo-fill="#d0ffd0" halo-radius="1" placement="line"
      max-char-angle-delta="50" dy="7" spacing="600" minimum-distance="600"
      avoid-edges="true" opacity="0.8"
      minimum-path-length="200">[name]</TextSymbolizer>
  </Rule>
</Style>

<Layer name="szlaki">
  <StyleName>szlaki</StyleName>
  <Datasource>
    &datasource-settings;
    <Parameter name="table">(
SELECT way, routes[num].route AS route,
  CASE routes[num].colour
    WHEN 'blue' THEN '#2554C7'
    WHEN '#0000FF' THEN '#2554C7'
    WHEN 'green' THEN '#348017'
    WHEN '#00FF00' THEN '#348017'
    ELSE routes[num].colour
  END AS colour,
  2 + (num - 1) * 2.1 AS offset2, 2 + (num - 1) * 3.5 AS offset3
FROM (
  SELECT ST_LineMerge(ST_Collect(way)) AS way, routes
  FROM planet_osm_track
  GROUP BY routes) AS x, generate_subscripts(x.routes, 1) AS num
) AS "szlaki"</Parameter>
    <Parameter name="geometry_field">way</Parameter>
  </Datasource>
</Layer>

<Layer name="szlaki-names">
  <StyleName>szlaki-names</StyleName>
  <Datasource>
    &datasource-settings;
    <Parameter name="table">(
SELECT ST_LineMerge(ST_Collect(way)) AS way, name
FROM planet_osm_track
GROUP BY name
) AS "szlaki-names"</Parameter>
    <Parameter name="geometry_field">way</Parameter>
  </Datasource>
</Layer>
